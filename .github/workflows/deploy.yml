name: Build, Push, and Deploy to Local Laptop

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Redis service is required for your tests
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (optional but useful for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub (replace with your Docker credentials)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: docker build -t suman2280/my-flask-app:latest .

      # Step 5: Run tests inside Docker container (optional)
      - name: Run tests
        run: |
          docker run --rm \
            -v $PWD:/app \
            -w /app \
            suman2280/my-flask-app:latest \
            python -m unittest discover -s tests


      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push suman2280/my-flask-app:latest

      # Step 7: Add SSH key to GitHub Actions
      - name: Add SSH key to GitHub Actions
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.LOCAL_SSH_KEY }}

      # Step 8: Deploy to Local Laptop via SSH
      - name: Deploy to Local Laptop
        run: |
          ssh -o StrictHostKeyChecking=no suman@192.168.72.194 "
            docker pull suman2280/my-flask-app:latest &&
            docker compose -f /home/suman/Desktop/project/Flask-app/docker-compose.yml up -d
          "
        env:
          LOCAL_SSH_KEY: ${{ secrets.LOCAL_SSH_KEY }}